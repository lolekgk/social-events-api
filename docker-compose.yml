version: '3.8'

services:
    app:
        build:
            dockerfile: Dockerfile
            context: .
        container_name: social_events
        ports:
            - 8000:8000
        env_file:
            - .env
        entrypoint: bash -c "./entrypoint.sh"
        environment:
            - DATABASE_URL=postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres_db/${POSTGRES_DB}
            - DEBUG=${DEBUG}
            - SECRET_KEY=${SECRET_KEY}
            - EMAIL_HOST_USER = ${EMAIL_HOST_USER}
            - EMAIL_HOST_PASSWORD = ${EMAIL_HOST_PASSWORD}
        volumes:
            - .:/app
        depends_on:
            postgres_db:
                condition: service_healthy
        restart: on-failure

    postgres_db:
        image: postgres:15.1
        container_name: postgres_db
        restart: on-failure
        env_file:
            - .env
        environment:
            POSTGRES_USER: ${POSTGRES_USERNAME}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - db_data:/var/lib/postgresql/data
        ports:
            - 5432:5423
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB}',
                ]
            interval: 5s
            timeout: 3s
            retries: 3

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:6
        restart: unless-stopped
        env_file:
            - .env
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        depends_on:
            - postgres_db
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        ports:
            - 8080:80
volumes:
    db_data:
        driver: local
    pgadmin-data:
        driver: local
