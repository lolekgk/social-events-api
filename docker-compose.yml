version: '3.8'

services:
    app:
        build:
            dockerfile: Dockerfile
            context: .
        container_name: social_events
        ports:
            - 8000:8000
        env_file:
            - .env
        entrypoint: bash -c './entrypoint.sh'
        volumes:
            - .:/app
        depends_on:
            postgres_db:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: on-failure

    postgres_db:
        image: postgres:15.1
        container_name: postgres_db
        restart: on-failure
        env_file:
            - .env
        volumes:
            - db_data:/var/lib/postgresql/data
        ports:
            - 5432:5423
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}',
                ]
            interval: 5s
            timeout: 3s
            retries: 3

    redis:
        image: redis:7
        env_file:
            - .env
        ports:
            - 6379:6379
        volumes:
            - redis_data:/data
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 5s
            timeout: 3s
            retries: 3

    celery_worker:
        build:
            context: .
            dockerfile: Dockerfile
        command: 'celery -A config worker --loglevel=info'
        env_file:
            - .env
        depends_on:
            redis:
                condition: service_healthy

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:6
        restart: unless-stopped
        env_file:
            - .env
        depends_on:
            - postgres_db
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        ports:
            - 8080:80
volumes:
    db_data:
        driver: local
    redis_data:
        driver: local
    pgadmin-data:
        driver: local
